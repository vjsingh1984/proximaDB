@startuml ProximaDB_State_Diagram
!theme plain
skinparam backgroundColor white
skinparam stateBackgroundColor lightblue
skinparam stateBorderColor darkblue

title ProximaDB System State Transitions

[*] --> ServerInitializing : Start Server

state ServerInitializing {
    [*] --> LoadingConfig
    LoadingConfig --> InitializingServices : Config Valid
    LoadingConfig --> ConfigError : Config Invalid
    InitializingServices --> StartingNetworkLayer
    StartingNetworkLayer --> ServerReady : All Services Started
    StartingNetworkLayer --> StartupError : Service Failure
}

ServerInitializing --> ServerReady : Success
ServerInitializing --> ServerError : Failure

state ServerReady {
    [*] --> Idle
    
    state "Collection Management" as CollMgmt {
        [*] --> CollectionIdle
        CollectionIdle --> CreatingCollection : create_collection()
        CreatingCollection --> ValidationStage : Validate Config
        ValidationStage --> CollectionCreated : Valid ‚úÖ
        ValidationStage --> ValidationFailed : Invalid ‚ùå
        ValidationFailed --> CollectionIdle
        CollectionCreated --> CollectionIdle
        
        CollectionIdle --> UpdatingCollection : update_collection()
        UpdatingCollection --> CollectionUpdated : Success ‚úÖ
        UpdatingCollection --> UpdateFailed : Failure üöß
        UpdateFailed --> CollectionIdle
        CollectionUpdated --> CollectionIdle
        
        CollectionIdle --> DeletingCollection : delete_collection()
        DeletingCollection --> CollectionDeleted : Success ‚úÖ
        DeletingCollection --> DeleteFailed : Failure ‚ùå
        DeleteFailed --> CollectionIdle
        CollectionDeleted --> CollectionIdle
    }
    
    state "Vector Operations" as VectorOps {
        [*] --> VectorIdle
        
        state "Insert Operations" as InsertOps {
            [*] --> InsertIdle
            InsertIdle --> ValidatingVectors : insert_vectors()
            ValidatingVectors --> SerializingData : Valid Vectors ‚úÖ
            ValidatingVectors --> InsertValidationFailed : Invalid Vectors ‚ùå
            SerializingData --> WritingToWAL : Serialization Complete
            WritingToWAL --> WALWritten : WAL Success ‚úÖ
            WritingToWAL --> WALWriteFailed : WAL Failure ‚ùå
            WALWritten --> WritingToStorage : Storage Available
            WALWritten --> InsertComplete : Storage Unavailable (WAL only)
            WritingToStorage --> InsertComplete : Storage Success ‚úÖ
            WritingToStorage --> InsertPartial : Storage Failure üöß
            InsertValidationFailed --> InsertIdle
            WALWriteFailed --> InsertIdle
            InsertComplete --> InsertIdle
            InsertPartial --> InsertIdle
        }
        
        state "Search Operations" as SearchOps {
            [*] --> SearchIdle
            SearchIdle --> ValidatingQuery : search()
            ValidatingQuery --> ProcessingSearch : Valid Query ‚úÖ
            ValidatingQuery --> SearchValidationFailed : Invalid Query ‚ùå
            ProcessingSearch --> SearchingStorage : Storage Available ‚úÖ
            ProcessingSearch --> SearchingPlaceholder : Storage Unavailable üöß
            SearchingStorage --> SearchComplete : Results Found
            SearchingPlaceholder --> SearchComplete : Placeholder Results
            SearchValidationFailed --> SearchIdle
            SearchComplete --> SearchIdle
        }
        
        state "CRUD Operations" as CRUDOps {
            [*] --> CRUDIdle
            CRUDIdle --> GettingVector : get_vector()
            GettingVector --> VectorRetrieved : Found ‚úÖ
            GettingVector --> VectorNotFound : Not Found üöß
            VectorRetrieved --> CRUDIdle
            VectorNotFound --> CRUDIdle
            
            CRUDIdle --> UpdatingVector : update_vector()
            UpdatingVector --> VectorUpdated : Success üöß
            UpdatingVector --> UpdateVectorFailed : Failure üöß
            VectorUpdated --> CRUDIdle
            UpdateVectorFailed --> CRUDIdle
            
            CRUDIdle --> DeletingVector : delete_vector()
            DeletingVector --> VectorDeleted : Success üöß
            DeletingVector --> DeleteVectorFailed : Failure üöß
            VectorDeleted --> CRUDIdle
            DeleteVectorFailed --> CRUDIdle
        }
        
        state "Advanced Operations" as AdvOps {
            [*] --> AdvancedIdle
            AdvancedIdle --> ProcessingMultiSearch : multi_search()
            ProcessingMultiSearch --> MultiSearchNotImplemented : ‚ùå Not Implemented
            MultiSearchNotImplemented --> AdvancedIdle
            
            AdvancedIdle --> ProcessingFilterDelete : delete_vectors_by_filter()
            ProcessingFilterDelete --> FilterDeleteNotImplemented : ‚ùå Not Implemented
            FilterDeleteNotImplemented --> AdvancedIdle
            
            AdvancedIdle --> ProcessingAggregatedSearch : search_with_aggregations()
            ProcessingAggregatedSearch --> AggregatedSearchNotImplemented : ‚ùå Not Implemented
            AggregatedSearchNotImplemented --> AdvancedIdle
            
            AdvancedIdle --> ProcessingVectorHistory : get_vector_history()
            ProcessingVectorHistory --> VectorHistoryNotImplemented : ‚ùå Not Implemented
            VectorHistoryNotImplemented --> AdvancedIdle
        }
    }
    
    state "Transaction Management" as TxMgmt {
        [*] --> TxIdle
        TxIdle --> BeginningTransaction : begin_transaction()
        BeginningTransaction --> TxNotImplemented : ‚ùå Not Implemented
        TxNotImplemented --> TxIdle
        
        TxIdle --> CommittingTransaction : commit_transaction()
        CommittingTransaction --> TxNotImplemented
        
        TxIdle --> RollingBackTransaction : rollback_transaction()
        RollingBackTransaction --> TxNotImplemented
    }
    
    state "System Monitoring" as SysMon {
        [*] --> MonitoringIdle
        MonitoringIdle --> CheckingHealth : health()
        CheckingHealth --> HealthOK : System Healthy ‚úÖ
        CheckingHealth --> HealthDegraded : System Issues üöß
        CheckingHealth --> HealthUnhealthy : System Error ‚ùå
        HealthOK --> MonitoringIdle
        HealthDegraded --> MonitoringIdle
        HealthUnhealthy --> SystemError
        
        MonitoringIdle --> CollectingMetrics : get_metrics()
        CollectingMetrics --> MetricsCollected : Success ‚úÖ
        CollectingMetrics --> MetricsError : Failure üöß
        MetricsCollected --> MonitoringIdle
        MetricsError --> MonitoringIdle
    }
    
    Idle --> CollMgmt : Collection Request
    Idle --> VectorOps : Vector Request  
    Idle --> TxMgmt : Transaction Request
    Idle --> SysMon : System Request
    
    CollMgmt --> Idle : Operation Complete
    VectorOps --> Idle : Operation Complete
    TxMgmt --> Idle : Operation Complete
    SysMon --> Idle : Operation Complete
}

ServerReady --> SystemError : Critical Failure
SystemError --> [*] : Server Shutdown

state "Error Recovery" as ErrorRecovery {
    [*] --> DetectingError
    DetectingError --> AnalyzingError
    AnalyzingError --> RecoverableError : Can Recover
    AnalyzingError --> NonRecoverableError : Cannot Recover
    RecoverableError --> AttemptingRecovery
    AttemptingRecovery --> RecoverySuccessful : Recovery OK
    AttemptingRecovery --> RecoveryFailed : Recovery Failed
    RecoverySuccessful --> [*]
    RecoveryFailed --> NonRecoverableError
    NonRecoverableError --> [*]
}

SystemError --> ErrorRecovery : Attempt Recovery
ErrorRecovery --> ServerReady : Recovery Successful
ErrorRecovery --> [*] : Recovery Failed

' Transaction State (When Implemented)
state "Future Transaction States" as FutureTx {
    state "Transaction Active" as TxActive {
        [*] --> TxBegin
        TxBegin --> TxInProgress : Operations Started
        TxInProgress --> TxPrepare : All Operations Complete
        TxPrepare --> TxCommit : Validation Passed
        TxPrepare --> TxAbort : Validation Failed
        TxCommit --> TxCommitted : Commit Successful
        TxAbort --> TxAborted : Rollback Complete
        TxCommitted --> [*]
        TxAborted --> [*]
        
        TxInProgress --> TxAbort : Error Occurred
    }
}

note right of FutureTx : ‚ùå Transaction states\nfor future implementation

' State Annotations
note right of CollMgmt : ‚úÖ Fully implemented\nCollection lifecycle management

note right of VectorOps : üöß Partially implemented\nCore operations work,\nadvanced features missing

note right of TxMgmt : ‚ùå Not implemented\nNeeds TransactionManager

note right of SysMon : ‚úÖ Implemented\nHealth and basic metrics

' Implementation Status Legend
note bottom
**State Status:**
‚úÖ **FULLY IMPLEMENTED** - Production ready states
üöß **PARTIALLY IMPLEMENTED** - Basic states work, some transitions missing
‚ùå **NOT IMPLEMENTED** - States defined but not functional

**Key State Transitions:**
‚Ä¢ All collection operations are fully functional
‚Ä¢ Vector insert and search are production ready
‚Ä¢ Vector CRUD operations need completion
‚Ä¢ Advanced operations need full implementation
‚Ä¢ Transaction management needs complete implementation
end note

@enduml