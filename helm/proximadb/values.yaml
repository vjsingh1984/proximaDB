# Default values for ProximaDB
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Image configuration
image:
  registry: proximadb
  repository: server
  tag: "latest"
  pullPolicy: IfNotPresent

# Deployment configuration
replicaCount: 3

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
    nvidia.com/gpu: 1  # Optional GPU support
  requests:
    cpu: 1000m
    memory: 2Gi

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Service configuration
service:
  type: LoadBalancer
  port: 5678
  targetPort: 5678
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: proximadb.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: proximadb-tls
      hosts:
        - proximadb.example.com

# Storage configuration
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 100Gi
  annotations: {}

# ProximaDB specific configuration
proximadb:
  # Server configuration
  server:
    nodeId: 1
    bindAddress: "0.0.0.0"
    port: 5678
    logLevel: "info"
    
  # Storage configuration
  storage:
    dataDir: "/data/proximadb"
    walDir: "/data/wal"
    memtableSize: "256MB"
    walSegmentSize: "64MB"
    compressionType: "lz4"
    enableMmap: true
    
  # Networking configuration
  network:
    enableGrpc: true
    enableRest: true
    enableDashboard: true
    requestTimeoutSecs: 30
    maxRequestSize: "32MB"
    
  # Authentication configuration
  auth:
    enabled: false
    jwtSecret: ""
    jwtExpirationSecs: 3600
    
  # Rate limiting configuration
  rateLimit:
    enabled: true
    requestsPerMinute: 1000
    burstSize: 100
    
  # GPU configuration
  gpu:
    enabled: false
    accelerationType: "auto"
    memoryPoolSizeMb: 1024
    batchSize: 10000
    minVectorsForGpu: 1000
    
  # Consensus configuration
  consensus:
    enabled: true
    electionTimeoutMs: 1000
    heartbeatTimeoutMs: 300
    snapshotThreshold: 10000
    
  # Monitoring configuration
  monitoring:
    enabled: true
    metricsPort: 9090
    enablePrometheus: true
    scrapeInterval: "30s"

# Security configuration
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

podSecurityContext:
  fsGroup: 1000

# Node selection
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - proximadb
        topologyKey: kubernetes.io/hostname

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network Policy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: monitoring
      ports:
      - protocol: TCP
        port: 9090
    - from: []
      ports:
      - protocol: TCP
        port: 5678

# Monitoring and observability
monitoring:
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics
    
  prometheusRule:
    enabled: true
    rules:
      - alert: ProximaDBDown
        expr: up{job="proximadb"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "ProximaDB instance is down"
          description: "ProximaDB instance {{ $labels.instance }} has been down for more than 1 minute."
          
      - alert: ProximaDBHighCPU
        expr: rate(container_cpu_usage_seconds_total{container="proximadb"}[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ProximaDB high CPU usage"
          description: "ProximaDB instance {{ $labels.instance }} has high CPU usage."

# Init containers
initContainers:
  - name: init-permissions
    image: busybox:1.35
    command: ['sh', '-c', 'chown -R 1000:1000 /data']
    volumeMounts:
    - name: data
      mountPath: /data
    securityContext:
      runAsUser: 0

# Additional volumes
extraVolumes: []

# Additional volume mounts
extraVolumeMounts: []

# Environment variables
env:
  - name: RUST_LOG
    value: "info"
  - name: PROXIMADB_NODE_ID
    valueFrom:
      fieldRef:
        fieldPath: metadata.name

# Secrets
secrets:
  create: false
  data: {}

# ConfigMaps
configMaps:
  create: true
  data:
    proximadb.toml: |
      [server]
      node_id = {{ .Values.proximadb.server.nodeId }}
      bind_address = "{{ .Values.proximadb.server.bindAddress }}"
      port = {{ .Values.proximadb.server.port }}
      log_level = "{{ .Values.proximadb.server.logLevel }}"
      
      [storage]
      data_dir = "{{ .Values.proximadb.storage.dataDir }}"
      wal_dir = "{{ .Values.proximadb.storage.walDir }}"
      memtable_size = "{{ .Values.proximadb.storage.memtableSize }}"
      wal_segment_size = "{{ .Values.proximadb.storage.walSegmentSize }}"
      compression_type = "{{ .Values.proximadb.storage.compressionType }}"
      enable_mmap = {{ .Values.proximadb.storage.enableMmap }}
      
      [network]
      enable_grpc = {{ .Values.proximadb.network.enableGrpc }}
      enable_rest = {{ .Values.proximadb.network.enableRest }}
      enable_dashboard = {{ .Values.proximadb.network.enableDashboard }}
      request_timeout_secs = {{ .Values.proximadb.network.requestTimeoutSecs }}
      max_request_size = "{{ .Values.proximadb.network.maxRequestSize }}"
      
      [auth]
      enabled = {{ .Values.proximadb.auth.enabled }}
      jwt_expiration_secs = {{ .Values.proximadb.auth.jwtExpirationSecs }}
      
      [rate_limit]
      enabled = {{ .Values.proximadb.rateLimit.enabled }}
      requests_per_minute = {{ .Values.proximadb.rateLimit.requestsPerMinute }}
      burst_size = {{ .Values.proximadb.rateLimit.burstSize }}
      
      [gpu]
      enabled = {{ .Values.proximadb.gpu.enabled }}
      acceleration_type = "{{ .Values.proximadb.gpu.accelerationType }}"
      memory_pool_size_mb = {{ .Values.proximadb.gpu.memoryPoolSizeMb }}
      batch_size = {{ .Values.proximadb.gpu.batchSize }}
      min_vectors_for_gpu = {{ .Values.proximadb.gpu.minVectorsForGpu }}
      
      [consensus]
      enabled = {{ .Values.proximadb.consensus.enabled }}
      election_timeout_ms = {{ .Values.proximadb.consensus.electionTimeoutMs }}
      heartbeat_timeout_ms = {{ .Values.proximadb.consensus.heartbeatTimeoutMs }}
      snapshot_threshold = {{ .Values.proximadb.consensus.snapshotThreshold }}
      
      [monitoring]
      enabled = {{ .Values.proximadb.monitoring.enabled }}
      metrics_port = {{ .Values.proximadb.monitoring.metricsPort }}
      enable_prometheus = {{ .Values.proximadb.monitoring.enablePrometheus }}
      scrape_interval = "{{ .Values.proximadb.monitoring.scrapeInterval }}"