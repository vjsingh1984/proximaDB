use std::fs;
use std::io::Write;

fn main() {
    // Read the Avro bytes from the Python test
    let avro_bytes = vec![
        0x06, 0x08, 0x76, 0x65, 0x63, 0x31, 0x08, 0xcd, 0xcc, 0xcc, 0x3d, 0xcd, 0xcc, 0x4c, 0x3e, 
        0x9a, 0x99, 0x99, 0x3e, 0xcd, 0xcc, 0xcc, 0x3e, 0x02, 0x04, 0x08, 0x74, 0x79, 0x70, 0x65, 
        0x08, 0x74, 0x65, 0x73, 0x74, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x02, 0x30, 0x00, 0x02, 
        0x80, 0x94, 0xeb, 0xdc, 0x83, 0x01, 0x08, 0x76, 0x65, 0x63, 0x32, 0x08, 0x00, 0x00, 0x00, 
        0x3f, 0x33, 0x33, 0x13, 0x3f, 0x33, 0x33, 0x33, 0x3f, 0x33, 0x33, 0x4d, 0x3f, 0x02, 0x04, 
        0x08, 0x74, 0x79, 0x70, 0x65, 0x08, 0x74, 0x65, 0x73, 0x74, 0x0a, 0x69, 0x6e, 0x64, 0x65, 
        0x78, 0x02, 0x31, 0x00, 0x02, 0x82, 0x94, 0xeb, 0xdc, 0x83, 0x01, 0x08, 0x76, 0x65, 0x63, 
        0x33, 0x08, 0x66, 0x66, 0x66, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0xcd, 0xcc, 0x8c, 0x3f, 0x9a, 
        0x99, 0x99, 0x3f, 0x02, 0x04, 0x08, 0x74, 0x79, 0x70, 0x65, 0x08, 0x74, 0x65, 0x73, 0x74, 
        0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x02, 0x32, 0x00, 0x02, 0x84, 0x94, 0xeb, 0xdc, 0x83, 
        0x01, 0x00
    ];
    
    // Write to file for testing
    fs::write("/tmp/test_avro_batch.avro", &avro_bytes).unwrap();
    
    println!("Test Avro bytes written to /tmp/test_avro_batch.avro");
    println!("Bytes length: {}", avro_bytes.len());
}