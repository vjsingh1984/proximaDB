{
  "namespace": "ai.proximadb.core",
  "protocol": "ProximaDBCore",
  "doc": "Core ProximaDB Avro schemas for zero-copy binary operations",
  
  "types": [
    {
      "name": "DistanceMetric",
      "type": "enum",
      "symbols": ["COSINE", "EUCLIDEAN", "DOT_PRODUCT", "HAMMING"],
      "doc": "Distance metrics for vector similarity calculation"
    },
    
    {
      "name": "StorageEngine", 
      "type": "enum",
      "symbols": ["VIPER", "LSM", "MMAP", "HYBRID"],
      "doc": "Storage engines for data persistence"
    },
    
    {
      "name": "IndexingAlgorithm",
      "type": "enum", 
      "symbols": ["HNSW", "IVF", "PQ", "FLAT", "ANNOY"],
      "doc": "Vector indexing algorithms for search optimization"
    },

    {
      "name": "VectorRecord",
      "type": "record",
      "doc": "Core vector record - SHARED between client SDK, server, service, and WAL to prevent schema drift",
      "fields": [
        {
          "name": "id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Unique vector identifier - optional for client, auto-generated if null"
        },
        {
          "name": "vector",
          "type": {
            "type": "array",
            "items": "float"
          },
          "doc": "Vector data as float array - REQUIRED field"
        },
        {
          "name": "metadata",
          "type": [
            "null",
            {
              "type": "map",
              "values": [
                "null",
                "string",
                "int",
                "long", 
                "float",
                "double",
                "boolean"
              ]
            }
          ],
          "default": null,
          "doc": "Optional metadata as key-value pairs"
        },
        {
          "name": "timestamp",
          "type": ["null", "long"],
          "default": null,
          "doc": "Creation/update timestamp in microseconds since epoch - auto-generated if null"
        },
        {
          "name": "version",
          "type": "long",
          "default": 1,
          "doc": "Record version for optimistic concurrency"
        },
        {
          "name": "expires_at",
          "type": ["null", "long"],
          "default": null,
          "doc": "Optional expiration timestamp for TTL support - null means no expiration"
        }
      ]
    },
    
    {
      "name": "CollectionConfig",
      "type": "record",
      "doc": "Collection configuration record",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "doc": "Collection name"
        },
        {
          "name": "dimension",
          "type": "int",
          "doc": "Vector dimension"
        },
        {
          "name": "distance_metric",
          "type": "DistanceMetric",
          "default": "COSINE",
          "doc": "Distance metric for similarity calculation"
        },
        {
          "name": "storage_engine",
          "type": "StorageEngine",
          "default": "VIPER",
          "doc": "Storage engine for data persistence"
        },
        {
          "name": "indexing_algorithm",
          "type": "IndexingAlgorithm",
          "default": "HNSW",
          "doc": "Vector indexing algorithm for search optimization"
        },
        {
          "name": "filterable_metadata_fields",
          "type": {
            "type": "array",
            "items": "string"
          },
          "default": [],
          "doc": "Metadata fields that support filtering"
        },
        {
          "name": "indexing_config",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Index-specific configuration parameters"
        }
      ]
    },
    
    {
      "name": "Collection",
      "type": "record",
      "doc": "Collection metadata record",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "doc": "Unique collection identifier"
        },
        {
          "name": "config",
          "type": "CollectionConfig",
          "doc": "Collection configuration"
        },
        {
          "name": "stats",
          "type": {
            "type": "record",
            "name": "CollectionStats",
            "fields": [
              {
                "name": "vector_count",
                "type": "long",
                "default": 0,
                "doc": "Total number of vectors"
              },
              {
                "name": "index_size_bytes",
                "type": "long",
                "default": 0,
                "doc": "Index size in bytes"
              },
              {
                "name": "data_size_bytes", 
                "type": "long",
                "default": 0,
                "doc": "Raw data size in bytes"
              }
            ]
          },
          "doc": "Collection statistics"
        },
        {
          "name": "created_at",
          "type": "long",
          "doc": "Collection creation timestamp"
        },
        {
          "name": "updated_at",
          "type": "long",
          "doc": "Last update timestamp"
        }
      ]
    },

    
    {
      "name": "SearchResult",
      "type": "record",
      "doc": "Single search result - SHARED schema for lean serialization",
      "fields": [
        {
          "name": "id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Vector identifier - null for anonymous results"
        },
        {
          "name": "score",
          "type": "float",
          "doc": "Similarity score - REQUIRED field"
        },
        {
          "name": "vector",
          "type": [
            "null",
            {
              "type": "array",
              "items": "float"
            }
          ],
          "default": null,
          "doc": "Vector data (only included if explicitly requested for network efficiency)"
        },
        {
          "name": "metadata",
          "type": [
            "null",
            {
              "type": "map",
              "values": [
                "null",
                "string",
                "int",
                "long",
                "float", 
                "double",
                "boolean"
              ]
            }
          ],
          "default": null,
          "doc": "Vector metadata (only included if explicitly requested for network efficiency)"
        },
        {
          "name": "rank",
          "type": ["null", "int"],
          "default": null,
          "doc": "Optional result ranking position (1-based)"
        }
      ]
    },
    
    {
      "name": "BatchRequest",
      "type": "record",
      "doc": "Batch operation request",
      "fields": [
        {
          "name": "collection_id",
          "type": "string",
          "doc": "Target collection identifier"
        },
        {
          "name": "vectors",
          "type": {
            "type": "array",
            "items": "VectorRecord"
          },
          "doc": "Array of vector records"
        },
        {
          "name": "upsert_mode",
          "type": "boolean",
          "default": false,
          "doc": "Update existing vectors if they exist"
        },
        {
          "name": "batch_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Optional batch identifier for tracking"
        }
      ]
    },
    
    {
      "name": "OperationResult",
      "type": "record",
      "doc": "Generic operation result",
      "fields": [
        {
          "name": "success",
          "type": "boolean",
          "doc": "Operation success indicator"
        },
        {
          "name": "error_message",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error message if operation failed"
        },
        {
          "name": "error_code",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error code for programmatic handling"
        },
        {
          "name": "affected_count",
          "type": "long",
          "default": 0,
          "doc": "Number of records affected"
        },
        {
          "name": "processing_time_us",
          "type": "long",
          "default": 0,
          "doc": "Processing time in microseconds"
        }
      ]
    },
    
    {
      "name": "HealthStatus",
      "type": "record",
      "doc": "System health status",
      "fields": [
        {
          "name": "status",
          "type": {
            "type": "enum",
            "name": "HealthState",
            "symbols": ["HEALTHY", "DEGRADED", "UNHEALTHY", "UNKNOWN"]
          },
          "doc": "Overall system health"
        },
        {
          "name": "version",
          "type": "string",
          "doc": "ProximaDB version"
        },
        {
          "name": "uptime_seconds",
          "type": "long",
          "doc": "System uptime in seconds"
        },
        {
          "name": "active_connections",
          "type": "int",
          "doc": "Number of active client connections"
        },
        {
          "name": "memory_usage_bytes",
          "type": "long",
          "doc": "Current memory usage in bytes"
        },
        {
          "name": "storage_usage_bytes",
          "type": "long",
          "doc": "Current storage usage in bytes"
        }
      ]
    },
    
    {
      "name": "CollectionOperation",
      "type": "enum",
      "symbols": ["CREATE", "UPDATE", "GET", "LIST", "DELETE", "MIGRATE"],
      "doc": "Collection operation types"
    },

    {
      "name": "CollectionRequest",
      "type": "record",
      "doc": "Unified collection request - handles all collection operations for flexibility",
      "fields": [
        {
          "name": "operation",
          "type": "CollectionOperation",
          "doc": "Type of collection operation to perform"
        },
        {
          "name": "collection_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Collection identifier (required for all ops except CREATE and LIST)"
        },
        {
          "name": "collection_config",
          "type": ["null", "CollectionConfig"],
          "default": null,
          "doc": "Collection configuration (for CREATE and UPDATE operations)"
        },
        {
          "name": "query_params",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Query parameters (limit, offset, filters, etc.)"
        },
        {
          "name": "options",
          "type": [
            "null",
            {
              "type": "map",
              "values": "boolean"
            }
          ],
          "default": null,
          "doc": "Operation options (force, include_stats, etc.)"
        },
        {
          "name": "migration_config",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Migration configuration (for MIGRATE operations)"
        }
      ]
    },

    {
      "name": "CollectionResponse",
      "type": "record",
      "doc": "Unified collection response - handles all collection operation results",
      "fields": [
        {
          "name": "success",
          "type": "boolean",
          "doc": "Operation success indicator"
        },
        {
          "name": "operation",
          "type": "CollectionOperation",
          "doc": "Operation that was performed"
        },
        {
          "name": "collection",
          "type": ["null", "Collection"],
          "default": null,
          "doc": "Single collection result (for GET and CREATE)"
        },
        {
          "name": "collections",
          "type": [
            "null",
            {
              "type": "array",
              "items": "Collection"
            }
          ],
          "default": null,
          "doc": "Multiple collections result (for LIST)"
        },
        {
          "name": "affected_count",
          "type": "long",
          "default": 0,
          "doc": "Number of items affected (vectors deleted, collections found, etc.)"
        },
        {
          "name": "total_count",
          "type": ["null", "long"],
          "default": null,
          "doc": "Total count for pagination (LIST operations)"
        },
        {
          "name": "metadata",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Additional response metadata (pagination, migration status, etc.)"
        },
        {
          "name": "error_message",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error message (if failed)"
        },
        {
          "name": "error_code",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error code for programmatic handling"
        },
        {
          "name": "processing_time_us",
          "type": "long",
          "default": 0,
          "doc": "Processing time in microseconds"
        }
      ]
    },
    
    {
      "name": "VectorOperation",
      "type": "enum",
      "symbols": ["INSERT", "UPSERT", "UPDATE", "DELETE", "SEARCH"],
      "doc": "Vector operation types"
    },

    {
      "name": "VectorInsert",
      "type": "record",
      "doc": "Zero-copy vector insert - optimized for direct WAL write",
      "fields": [
        {
          "name": "collection_id",
          "type": "string",
          "doc": "Target collection identifier"
        },
        {
          "name": "vectors",
          "type": {
            "type": "array",
            "items": "VectorRecord"
          },
          "doc": "Vector records to insert (supports single or batch)"
        },
        {
          "name": "upsert_mode",
          "type": "boolean",
          "default": false,
          "doc": "Update if vector ID already exists"
        }
      ]
    },

    {
      "name": "VectorMutation",
      "type": "record",
      "doc": "Flexible vector mutation - handles UPDATE and DELETE via expires_at",
      "fields": [
        {
          "name": "collection_id",
          "type": "string",
          "doc": "Target collection identifier"
        },
        {
          "name": "operation",
          "type": {
            "type": "enum",
            "name": "MutationType",
            "symbols": ["UPDATE", "DELETE"],
            "doc": "UPDATE modifies fields, DELETE sets expires_at to now"
          },
          "doc": "Type of mutation"
        },
        {
          "name": "selector",
          "type": {
            "type": "record",
            "name": "VectorSelector",
            "fields": [
              {
                "name": "ids",
                "type": ["null", {"type": "array", "items": "string"}],
                "default": null,
                "doc": "Select by vector IDs"
              },
              {
                "name": "metadata_filter",
                "type": [
                  "null",
                  {
                    "type": "map",
                    "values": ["string", "int", "long", "float", "double", "boolean"]
                  }
                ],
                "default": null,
                "doc": "Select by metadata filter"
              },
              {
                "name": "vector_match",
                "type": ["null", {"type": "array", "items": "float"}],
                "default": null,
                "doc": "Select by exact vector match (100% similarity)"
              }
            ]
          },
          "doc": "How to select vectors for mutation"
        },
        {
          "name": "updates",
          "type": [
            "null",
            {
              "type": "record",
              "name": "VectorUpdates",
              "fields": [
                {
                  "name": "vector",
                  "type": ["null", {"type": "array", "items": "float"}],
                  "default": null,
                  "doc": "New vector data"
                },
                {
                  "name": "metadata",
                  "type": [
                    "null",
                    {
                      "type": "map",
                      "values": ["null", "string", "int", "long", "float", "double", "boolean"]
                    }
                  ],
                  "default": null,
                  "doc": "New metadata (null = no change, empty = clear)"
                },
                {
                  "name": "expires_at",
                  "type": ["null", "long"],
                  "default": null,
                  "doc": "Expiration timestamp (DELETE sets this to current time)"
                }
              ]
            }
          ],
          "default": null,
          "doc": "Updates to apply (null for DELETE = set expires_at to now)"
        }
      ]
    },

    {
      "name": "VectorSearch",
      "type": "record",
      "doc": "Flexible vector search - supports multiple query modes",
      "fields": [
        {
          "name": "collection_id",
          "type": "string",
          "doc": "Target collection identifier"
        },
        {
          "name": "queries",
          "type": {
            "type": "array",
            "items": {
              "type": "record",
              "name": "SearchQuery",
              "fields": [
                {
                  "name": "vector",
                  "type": ["null", {"type": "array", "items": "float"}],
                  "default": null,
                  "doc": "Query vector (null for metadata-only search)"
                },
                {
                  "name": "id",
                  "type": ["null", "string"],
                  "default": null,
                  "doc": "Search by specific vector ID"
                },
                {
                  "name": "metadata_filter",
                  "type": [
                    "null",
                    {
                      "type": "map",
                      "values": ["string", "int", "long", "float", "double", "boolean"]
                    }
                  ],
                  "default": null,
                  "doc": "Metadata filtering criteria"
                }
              ]
            }
          },
          "doc": "Search queries (supports batch search)"
        },
        {
          "name": "top_k",
          "type": "int",
          "default": 10,
          "doc": "Number of results per query"
        },
        {
          "name": "distance_metric_override",
          "type": ["null", "DistanceMetric"],
          "default": null,
          "doc": "Override collection's default distance metric"
        },
        {
          "name": "search_params",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Algorithm-specific parameters (ef_search, nprobe, etc.)"
        },
        {
          "name": "include_fields",
          "type": {
            "type": "record",
            "name": "IncludeFields",
            "fields": [
              {"name": "vector", "type": "boolean", "default": false},
              {"name": "metadata", "type": "boolean", "default": true},
              {"name": "score", "type": "boolean", "default": true},
              {"name": "rank", "type": "boolean", "default": true}
            ]
          },
          "default": {},
          "doc": "Which fields to include in results"
        }
      ]
    },

    {
      "name": "VectorOperationResponse",
      "type": "record",
      "doc": "Unified response for all vector operations - consistent metrics",
      "fields": [
        {
          "name": "success",
          "type": "boolean",
          "doc": "Operation success indicator"
        },
        {
          "name": "operation",
          "type": "VectorOperation",
          "doc": "Operation that was performed"
        },
        {
          "name": "metrics",
          "type": {
            "type": "record",
            "name": "OperationMetrics",
            "fields": [
              {"name": "total_processed", "type": "long", "default": 0},
              {"name": "successful_count", "type": "long", "default": 0},
              {"name": "failed_count", "type": "long", "default": 0},
              {"name": "updated_count", "type": "long", "default": 0, "doc": "For UPSERT operations"},
              {"name": "processing_time_us", "type": "long", "default": 0},
              {"name": "wal_write_time_us", "type": "long", "default": 0},
              {"name": "index_update_time_us", "type": "long", "default": 0}
            ]
          },
          "doc": "Operation performance metrics"
        },
        {
          "name": "results",
          "type": [
            "null",
            {
              "type": "array",
              "items": "SearchResult"
            }
          ],
          "default": null,
          "doc": "Search results (only for SEARCH operations)"
        },
        {
          "name": "vector_ids",
          "type": [
            "null",
            {
              "type": "array",
              "items": "string"
            }
          ],
          "default": null,
          "doc": "Generated or affected vector IDs"
        },
        {
          "name": "error_message",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error message (if failed)"
        },
        {
          "name": "error_code",
          "type": ["null", "string"],
          "default": null,
          "doc": "Error code for programmatic handling"
        }
      ]
    },

    {
      "name": "SearchResultsBinary",
      "type": "record",
      "doc": "Zero-copy search results for large datasets - used in gRPC avro_results field",
      "fields": [
        {
          "name": "results",
          "type": {
            "type": "array",
            "items": "SearchResult"
          },
          "doc": "Search results array"
        },
        {
          "name": "total_found",
          "type": "long",
          "default": 0,
          "doc": "Total number of matching vectors (before top_k limit)"
        },
        {
          "name": "search_algorithm_used",
          "type": ["null", "string"],
          "default": null,
          "doc": "Algorithm used for this search (HNSW, exact, etc.)"
        },
        {
          "name": "query_metadata",
          "type": [
            "null",
            {
              "type": "map",
              "values": "string"
            }
          ],
          "default": null,
          "doc": "Additional query execution metadata"
        }
      ]
    },

    {
      "name": "SchemaVersion",
      "type": "record",
      "doc": "Schema version information for Avro binary compatibility",
      "fields": [
        {
          "name": "major",
          "type": "int",
          "default": 1,
          "doc": "Major schema version"
        },
        {
          "name": "minor",
          "type": "int", 
          "default": 0,
          "doc": "Minor schema version"
        },
        {
          "name": "patch",
          "type": "int",
          "default": 0,
          "doc": "Patch schema version"
        },
        {
          "name": "schema_hash",
          "type": "string",
          "doc": "Hash of the schema for validation"
        }
      ]
    }
  ]
}