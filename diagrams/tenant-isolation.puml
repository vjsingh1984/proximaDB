@startuml tenant-isolation
!theme cerulean-outline
skinparam backgroundColor #F8F9FA

title ProximaDB Multi-Tenant Architecture & Isolation

package "Tenant Identification" as tenant_id {
  rectangle "Authentication Methods" as auth_methods #E8F4FD {
    component [HTTP Headers\nx-tenant-id] as headers
    component [JWT Claims\nembedded tenant] as jwt
    component [API Key Prefixes\nencoded tenant] as api_keys
    component [URL Patterns\nsubdomains/paths] as url_patterns
  }
}

package "Isolation Levels" as isolation_levels {
  
  rectangle "Logical Isolation\n(Default)" as logical #E8F8E8 {
    component [Namespace Tagging] as namespacing
    component [Query Filtering] as query_filter
    component [Resource Quotas] as quotas
    note bottom : Maximum resource sharing\nCost-efficient\nSecurity through filtering
  }
  
  rectangle "Container Isolation\n(Professional)" as container #FFF4E6 {
    component [Dedicated Containers] as dedicated_containers
    component [Resource Guarantees] as resource_guarantees
    component [Network Namespaces] as network_ns
    note bottom : Predictable performance\nReduced noisy neighbors\nDedicated resources
  }
  
  rectangle "Cluster Isolation\n(Enterprise)" as cluster #F0E6FF {
    component [Separate K8s Clusters] as separate_clusters
    component [Custom Configurations] as custom_configs
    component [Air-gapped Deployment] as air_gapped
    note bottom : Maximum security\nCompliance support\nCustom tuning
  }
}

package "Routing Strategies" as routing {
  
  rectangle "Consistent Hashing" as consistent_hash #FFE6E6 {
    component [SHA-256 Hash] as hash_func
    component [Shard Assignment] as shard_assign
    component [Minimal Rebalancing] as rebalancing
    note bottom : Deterministic routing\nScalable distribution
  }
  
  rectangle "Geographic Routing" as geo_routing #E6F7FF {
    component [Data Residency] as residency
    component [Latency Optimization] as latency_opt
    component [Compliance Support] as compliance
    note bottom : GDPR/CCPA compliance\nRegional performance
  }
  
  rectangle "Workload-Based Routing" as workload_routing #F0FFF0 {
    component [OLTP Clusters] as oltp
    component [OLAP Clusters] as olap
    component [ML Inference Clusters] as ml_clusters
    note bottom : Optimized for workload\nSpecialized hardware
  }
}

package "Resource Management" as resource_mgmt {
  rectangle "Tenant Quotas" as quotas_mgmt #FFFACD {
    component [Storage Limits] as storage_limits
    component [QPS Throttling] as qps_limits
    component [Compute Allocation] as compute_limits
    component [Billing Integration] as billing
  }
  
  rectangle "Fair Sharing" as fair_sharing #F5F5DC {
    component [Priority Queues] as priority_queues
    component [Resource Pools] as resource_pools
    component [Noisy Neighbor Detection] as noisy_neighbor
  }
}

package "Data Isolation" as data_isolation {
  rectangle "Storage Separation" as storage_sep #E0E0E0 {
    component [Tenant Prefixes] as prefixes
    component [Encrypted Boundaries] as encryption
    component [Access Control Lists] as acls
  }
  
  rectangle "Index Isolation" as index_isolation #F0F0F0 {
    component [Tenant-Specific Indexes] as tenant_indexes
    component [Shared Index Partitions] as shared_partitions
    component [Metadata Segregation] as metadata_seg
  }
}

' Authentication flow
auth_methods --> logical : "Default tier"
auth_methods --> container : "Professional tier"
auth_methods --> cluster : "Enterprise tier"

' Routing connections
consistent_hash --> logical : "Shard assignment"
geo_routing --> container : "Regional deployment"
workload_routing --> cluster : "Specialized clusters"

' Resource management
quotas_mgmt --> fair_sharing : "Quota enforcement"
fair_sharing --> data_isolation : "Resource allocation"

' Data isolation flow
storage_sep --> index_isolation : "Isolated data access"
tenant_indexes --> shared_partitions : "Index strategy"

' Cross-cutting concerns
billing --> quotas_mgmt : "Usage tracking"
compliance --> encryption : "Data protection"
noisy_neighbor --> priority_queues : "Performance isolation"

note as tenant_lifecycle
**Tenant Lifecycle Management**
• **Onboarding**: Automatic tenant provisioning
• **Scaling**: Dynamic resource allocation
• **Monitoring**: Per-tenant metrics and alerting
• **Billing**: Usage-based cost attribution
• **Offboarding**: Secure data deletion
end note

note as security_guarantees
**Security Guarantees**
• **Data Isolation**: No cross-tenant data access
• **Compute Isolation**: Resource boundaries enforced
• **Network Isolation**: Traffic segregation
• **Audit Logging**: Complete tenant activity tracking
• **Compliance**: GDPR, CCPA, SOC 2 support
end note

@enduml