[build-system]
requires = ["setuptools>=64", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "proximadb-python"
version = "0.1.0"
description = "Python client SDK for ProximaDB - Cloud-native vector database engineered for AI-first applications"
authors = [
    {name = "Vijaykumar Singh", email = "singhvjd@gmail.com"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["vector", "database", "similarity", "search", "ml", "ai", "embeddings", "proximity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "numpy>=1.21.0",
    "typing-extensions>=4.0.0",
    "grpcio>=1.50.0",
    "grpcio-tools>=1.50.0",
    "protobuf>=4.21.0",
    "asyncio-mqtt>=0.13.0",
    "tenacity>=8.0.0",
    "orjson>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.1.0",
    "pytest-xdist>=3.0.0",
    "sentence-transformers>=2.2.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "ruff>=0.0.280",
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

performance = [
    "uvloop>=0.17.0",
    "aiodns>=3.0.0",
    "cchardet>=2.1.0",
]

[project.urls]
Homepage = "https://github.com/vjsingh1984/proximadb"
Documentation = "https://github.com/vjsingh1984/proximadb#readme"
Repository = "https://github.com/vjsingh1984/proximadb"
Issues = "https://github.com/vjsingh1984/proximadb/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"proximadb" = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["proximadb"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=proximadb",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--html=reports/report.html",
    "--self-contained-html",
    "-v"
]
markers = [
    "integration: marks tests as integration tests (may require running server)",
    "performance: marks tests as performance tests (may take longer to run)",
    "large_scale: marks tests as large-scale tests with significant data volumes",
    "grpc: marks tests as gRPC-specific tests", 
    "rest: marks tests as REST-specific tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
minversion = "7.0"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "SIM118", # in-dict-keys
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ARG001"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]